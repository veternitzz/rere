name: Nightly Build

on:
    schedule:
        - cron:
            '0 5 * * *'
    workflow_dispatch:
    
defaults:
    run:
        shell: bash


permissions:
  contents: write
  
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
      date: ${{ steps.date.outputs.date }}
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-${{ steps.date.outputs.date }}
        release_name: Nightly Build ${{ steps.date.outputs.date }}
        body: Nightly build artifacts.
        prerelease: true

  build-upload-artifact:
  
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            host: windows
            runner-os: windows-latest
            arch: x86_64
            cargo-target: x86_64-pc-windows-msvc

          - name: Linux x86_64
            host: linux
            runner-os: ubuntu-latest
            arch: x86_64
            cargo-target: x86_64-unknown-linux-gnu

          - name: macOS x86_64
            host: macos
            runner-os: macos-13
            arch: x86_64
            cargo-target: x86_64-apple-darwin

          - name: macOS aarch64
            host: macos
            runner-os: macos-14
            arch: aarch64
            cargo-target: aarch64-apple-darwin

    name: Nightly - ${{ matrix.name }}
    runs-on: ${{ matrix.runner-os }}
    needs: create-release
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
          components: clippy

    - name: Build
      run: |
        cargo build \
        --all-features \
        --release

    - name: Give Permissions
      if: matrix.host != 'windows' # Only on non-Windows
      run: chmod +x ./target/release/rere
    
    #- name: Upload Release Asset (windows)
    #  if: matrix.host == 'windows'
    #  uses: actions/upload-release-asset@v1
    #  with:
    #    upload_url: ${{ needs.create-release.outputs.upload-url }}
    #    asset_path: ./target/release/rere.exe # Direct path to the executable
    #    asset_name: rere-nightly-${{ needs.create-release.outputs.date }}-${{ matrix.cargo-target }}.exe # Name of the executable
    #    asset_content_type: application/octet-stream # Important for executables

    - name: Upload Release Asset (non-windows)
      if: matrix.host != 'windows'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: ./target/release/rere # Direct path to the executable
        asset_name: rere-nightly-${{ needs.create-release.outputs.date }}-${{ matrix.cargo-target }}.exe # Name of the executable
        asset_content_type: application/octet-stream # Important for executables